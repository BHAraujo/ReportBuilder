[
  {
    "uri": "features/feature3.feature",
    "id": "i-am-some-other-feature-for-testing-some-broken-functionality",
    "keyword": "Feature",
    "name": "I am some other feature for testing some broken functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-failed-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some failed testing scenario of some functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 3
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2013777000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2166167000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5001816000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step which will fail",
            "line": 6,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:29"
            },
            "result": {
              "status": "failed",
              "error_message": "I am some error (RuntimeError)\n./features/step_definitions/sample_steps.rb:31:in `/^I am when step which will fail$/'\nfeatures/feature3.feature:6:in `When I am when step which will fail'",
              "duration": 4004507000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:9"
            },
            "result": {
              "status": "skipped"
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 48141364000
            },
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ]
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-undefined-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some undefined testing scenario of some functionality",
        "description": "",
        "line": 10,
        "type": "scenario",
        "tags": [
          {
            "name": "@wip",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2003464000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 2003989000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5000845000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 12,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 2002594000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5000588000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some undefined feature",
            "line": 13,
            "match": {
              "location": "features/feature3.feature:13"
            },
            "result": {
              "status": "undefined"
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 26000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-pending-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some pending testing scenario of some functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 15
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2003166000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 2004448000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5003989000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 18,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 2001429000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5004927000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some pending feature",
            "line": 19,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:25"
            },
            "result": {
              "status": "pending",
              "error_message": "TODO (Cucumber::Pending)\n./features/step_definitions/sample_steps.rb:26:in `/^I am then step of some pending feature$/'\nfeatures/feature3.feature:19:in `Then I am then step of some pending feature'",
              "duration": 217000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 23000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 22,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 21
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2000402000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 23,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2002832000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5004669000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 24,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:5"
            },
            "result": {
              "status": "passed",
              "duration": 5003690000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5004136000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 25,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 2001784000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5001922000
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 27000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 28,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 27
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 2003840000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 29,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 2005008000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5002574000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 30,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 2004052000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5000207000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 31,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:21"
            },
            "result": {
              "status": "passed",
              "duration": 2004071000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:5"
                },
                "result": {
                  "status": "passed",
                  "duration": 5000398000
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 26000
            }
          }
        ]
      }
    ]
  }
]