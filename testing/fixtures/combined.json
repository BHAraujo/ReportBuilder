[
  {
    "uri": "features/feature1.feature",
    "id": "i-am-some-feature-for-testing-some-functionality",
    "keyword": "Feature",
    "name": "I am some feature for testing some functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-feature-for-testing-some-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 3
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 18000
            },
            "status": "passed",
            "duration": 18000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 26000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 12000
                },
                "status": "passed",
                "duration": 12000
              }
            ],
            "status": "passed",
            "duration": 38000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 6,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 64000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 81000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 37000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 12000
                },
                "status": "passed",
                "duration": 12000
              }
            ],
            "status": "passed",
            "duration": 49000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 16000
            },
            "status": "passed",
            "duration": 16000
          }
        ],
        "status": "passed",
        "duration": 202000
      },
      {
        "id": "i-am-some-feature-for-testing-some-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 10,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 32000
            },
            "status": "passed",
            "duration": 32000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 40000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 19000
                },
                "status": "passed",
                "duration": 19000
              }
            ],
            "status": "passed",
            "duration": 59000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 12,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 71000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 88000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 13,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 49000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 10000
                },
                "status": "passed",
                "duration": 10000
              }
            ],
            "status": "passed",
            "duration": 59000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 15000
            },
            "status": "passed",
            "duration": 15000
          }
        ],
        "status": "passed",
        "duration": 253000
      },
      {
        "id": "i-am-some-feature-for-testing-some-functionality;i-am-some-testing-scenario-with-two-tags-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario with two tags of some functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 15
          },
          {
            "name": "@last",
            "line": 15
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 12000
            },
            "status": "passed",
            "duration": 12000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 25000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 9000
                },
                "status": "passed",
                "duration": 9000
              }
            ],
            "status": "passed",
            "duration": 34000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 18,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 34000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 49000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some this feature",
            "line": 19,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 119000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 23000
                },
                "status": "passed",
                "duration": 23000
              }
            ],
            "status": "passed",
            "duration": 142000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 26000
            },
            "status": "passed",
            "duration": 26000
          }
        ],
        "status": "passed",
        "duration": 263000
      },
      {
        "id": "i-am-some-feature-for-testing-some-functionality;i-am-some-testing-scenario-of-other-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of other functionality",
        "description": "",
        "line": 22,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 21
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 29000
            },
            "status": "passed",
            "duration": 29000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 23,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 35000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 52000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 24,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 69000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 85000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 25,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 116000
                },
                "status": "passed",
                "duration": 116000
              }
            ],
            "status": "passed",
            "duration": 149000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 20000
            },
            "status": "passed",
            "duration": 20000
          }
        ],
        "status": "passed",
        "duration": 335000
      }
    ],
    "status": "working",
    "duration": 1053000
  },
  {
    "uri": "features/feature3.feature",
    "id": "i-am-some-other-feature-for-testing-some-broken-functionality",
    "keyword": "Feature",
    "name": "I am some other feature for testing some broken functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-failed-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some failed testing scenario of some functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 3
          },
          {
            "name": "@screenshot",
            "line": 3
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 31000
            },
            "status": "passed",
            "duration": 31000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 67000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 83000
          },
          {
            "keyword": "When ",
            "name": "I am when step which will fail",
            "line": 6,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:25"
            },
            "result": {
              "status": "failed",
              "error_message": "I am some error (RuntimeError)\n./features/step_definitions/sample_steps.rb:26:in `/^I am when step which will fail$/'\nfeatures/feature3.feature:6:in `When I am when step which will fail'",
              "duration": 226000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "failed",
            "duration": 226000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "skipped",
            "duration": 0
          }
        ],
        "after": [
          {
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 5605648000
            },
            "status": "passed",
            "duration": 5605648000
          }
        ],
        "status": "failed",
        "duration": 5605988000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-undefined-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some undefined testing scenario of some functionality",
        "description": "",
        "line": 10,
        "type": "scenario",
        "tags": [
          {
            "name": "@wip",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 43000
            },
            "status": "passed",
            "duration": 43000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 64000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 19000
                },
                "status": "passed",
                "duration": 19000
              }
            ],
            "status": "passed",
            "duration": 83000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 12,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 86000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 101000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some undefined feature",
            "line": 13,
            "match": {
              "location": "features/feature3.feature:13"
            },
            "result": {
              "status": "undefined",
              "duration": 0
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "undefined",
            "duration": 0
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 39000
            },
            "status": "passed",
            "duration": 39000
          }
        ],
        "status": "undefined",
        "duration": 266000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-pending-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some pending testing scenario of some functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 15
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "status": "passed",
            "duration": 33000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 37000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 52000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 18,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 59000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 79000
                },
                "status": "passed",
                "duration": 79000
              }
            ],
            "status": "passed",
            "duration": 138000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some pending feature",
            "line": 19,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:21"
            },
            "result": {
              "status": "pending",
              "error_message": "TODO (Cucumber::Pending)\n./features/step_definitions/sample_steps.rb:22:in `/^I am then step of some pending feature$/'\nfeatures/feature3.feature:19:in `Then I am then step of some pending feature'",
              "duration": 247000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "pending",
            "duration": 247000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 29000
            },
            "status": "passed",
            "duration": 29000
          }
        ],
        "status": "pending",
        "duration": 499000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 22,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 21
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 25000
            },
            "status": "passed",
            "duration": 25000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 23,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 36000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 53000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 24,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 67000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 52000
                },
                "status": "passed",
                "duration": 52000
              }
            ],
            "status": "passed",
            "duration": 119000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 25,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 14000
                },
                "status": "passed",
                "duration": 14000
              }
            ],
            "status": "passed",
            "duration": 47000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 23000
            },
            "status": "passed",
            "duration": 23000
          }
        ],
        "status": "passed",
        "duration": 267000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 28,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 27
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 529000
            },
            "status": "passed",
            "duration": 529000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 29,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 45000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 20000
                },
                "status": "passed",
                "duration": 20000
              }
            ],
            "status": "passed",
            "duration": 65000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 30,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 73000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 23000
                },
                "status": "passed",
                "duration": 23000
              }
            ],
            "status": "passed",
            "duration": 96000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 31,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 68000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 85000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 29000
            },
            "status": "passed",
            "duration": 29000
          }
        ],
        "status": "passed",
        "duration": 804000
      }
    ],
    "status": "broken",
    "duration": 5607824000
  },
  {
    "uri": "features/feature2.feature",
    "id": "i-am-some-other-feature-for-testing-some-functionality",
    "keyword": "Feature",
    "name": "I am some other feature for testing some functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-other-feature-for-testing-some-functionality;i-am-some-testing-scenario-of-other-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of other functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 3
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 29000
            },
            "status": "passed",
            "duration": 29000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 56000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 71000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 6,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 60000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 76000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 51000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 14000
                },
                "status": "passed",
                "duration": 14000
              }
            ],
            "status": "passed",
            "duration": 65000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 23000
            },
            "status": "passed",
            "duration": 23000
          }
        ],
        "status": "passed",
        "duration": 264000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-functionality;i-am-some-testing-scenario-outline-of-other-functionality;;2",
        "keyword": "Scenario Outline",
        "name": "I am some testing scenario outline of other functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 30000
            },
            "status": "passed",
            "duration": 30000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 16,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 41000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 58000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 16,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 63000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 12000
                },
                "status": "passed",
                "duration": 12000
              }
            ],
            "status": "passed",
            "duration": 75000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 16,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 46000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 12000
                },
                "status": "passed",
                "duration": 12000
              }
            ],
            "status": "passed",
            "duration": 58000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 34000
            },
            "status": "passed",
            "duration": 34000
          }
        ],
        "status": "passed",
        "duration": 255000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-functionality;i-am-some-testing-scenario-outline-of-other-functionality;;3",
        "keyword": "Scenario Outline",
        "name": "I am some testing scenario outline of other functionality",
        "description": "",
        "line": 17,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 27000
            },
            "status": "passed",
            "duration": 27000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 61000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 76000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 17,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 77000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 94000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some this feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 56000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 72000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 35000
            },
            "status": "passed",
            "duration": 35000
          }
        ],
        "status": "passed",
        "duration": 304000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 20,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 19
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 18000
            },
            "status": "passed",
            "duration": 18000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 21,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 27000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 24000
                },
                "status": "passed",
                "duration": 24000
              }
            ],
            "status": "passed",
            "duration": 51000
          },
          {
            "keyword": "When ",
            "name": "I am when step which will fail",
            "line": 22,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:25"
            },
            "result": {
              "status": "failed",
              "error_message": "I am some error (RuntimeError)\n./features/step_definitions/sample_steps.rb:26:in `/^I am when step which will fail$/'\nfeatures/feature2.feature:22:in `When I am when step which will fail'",
              "duration": 231000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "failed",
            "duration": 231000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 23,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "skipped",
            "duration": 0
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 46000
            },
            "status": "passed",
            "duration": 46000
          }
        ],
        "status": "failed",
        "duration": 346000
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 26,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 25
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 30000
            },
            "status": "passed",
            "duration": 30000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 27,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 38000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 9000
                },
                "status": "passed",
                "duration": 9000
              }
            ],
            "status": "passed",
            "duration": 47000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 28,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 102000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 117000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 29,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 50000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 65000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "status": "passed",
            "duration": 33000
          }
        ],
        "status": "passed",
        "duration": 292000
      }
    ],
    "status": "broken",
    "duration": 1461000
  },
  {
    "uri": "features/feature4.feature",
    "id": "i-am-some-other-feature-for-testing-tag-functionality",
    "keyword": "Feature",
    "name": "I am some other feature for testing tag functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-other-feature-for-testing-tag-functionality;i-am-some-testing-scenario-with-two-tags-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario with two tags of some functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 3
          },
          {
            "name": "@last",
            "line": 3
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "status": "passed",
            "duration": 33000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 67000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 21000
                },
                "status": "passed",
                "duration": 21000
              }
            ],
            "status": "passed",
            "duration": 88000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 6,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 110000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 125000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some this feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 48000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 65000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 27000
            },
            "status": "passed",
            "duration": 27000
          }
        ],
        "status": "passed",
        "duration": 338000
      },
      {
        "id": "i-am-some-other-feature-for-testing-tag-functionality;i-am-some-testing-scenario-with-one-tags-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario with one tags of some functionality",
        "description": "",
        "line": 10,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 30000
            },
            "status": "passed",
            "duration": 30000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 40000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 19000
                },
                "status": "passed",
                "duration": 19000
              }
            ],
            "status": "passed",
            "duration": 59000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 12,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 61000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 76000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 13,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 43000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 14000
                },
                "status": "passed",
                "duration": 14000
              }
            ],
            "status": "passed",
            "duration": 57000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 24000
            },
            "status": "passed",
            "duration": 24000
          }
        ],
        "status": "passed",
        "duration": 246000
      },
      {
        "id": "i-am-some-other-feature-for-testing-tag-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 15
          },
          {
            "name": "@scenario",
            "line": 15
          },
          {
            "name": "@feature",
            "line": 15
          },
          {
            "name": "@more",
            "line": 15
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 35000
            },
            "status": "passed",
            "duration": 35000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 36000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 34000
                },
                "status": "passed",
                "duration": 34000
              }
            ],
            "status": "passed",
            "duration": 70000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 18,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 68000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 81000
                },
                "status": "passed",
                "duration": 81000
              }
            ],
            "status": "passed",
            "duration": 149000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 19,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 32000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 20000
                },
                "status": "passed",
                "duration": 20000
              }
            ],
            "status": "passed",
            "duration": 52000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 28000
            },
            "status": "passed",
            "duration": 28000
          }
        ],
        "status": "passed",
        "duration": 334000
      },
      {
        "id": "i-am-some-other-feature-for-testing-tag-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 22,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 21
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 28000
            },
            "status": "passed",
            "duration": 28000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 23,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 36000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 52000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 24,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 69000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 86000
          },
          {
            "keyword": "And ",
            "name": "I am step with screenshot",
            "line": 25,
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:33"
            },
            "result": {
              "status": "passed",
              "duration": 5344233000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 28000
                },
                "status": "passed",
                "duration": 28000
              }
            ],
            "status": "passed",
            "duration": 5344261000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 26,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 199000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 19000
                },
                "status": "passed",
                "duration": 19000
              }
            ],
            "status": "passed",
            "duration": 218000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 47000
            },
            "status": "passed",
            "duration": 47000
          }
        ],
        "status": "passed",
        "duration": 5344692000
      },
      {
        "id": "i-am-some-other-feature-for-testing-tag-functionality;i-am-scenario-with-more-steps",
        "keyword": "Scenario",
        "name": "I am scenario with more steps",
        "description": "",
        "line": 29,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 28
          },
          {
            "name": "@more",
            "line": 28
          },
          {
            "name": "@long",
            "line": 28
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 61000
            },
            "status": "passed",
            "duration": 61000
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 30,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 45000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 18000
                },
                "status": "passed",
                "duration": 18000
              }
            ],
            "status": "passed",
            "duration": 63000
          },
          {
            "keyword": "And ",
            "name": "I am give step of some other feature",
            "line": 31,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 37000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 54000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 32,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 67000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 18000
                },
                "status": "passed",
                "duration": 18000
              }
            ],
            "status": "passed",
            "duration": 85000
          },
          {
            "keyword": "And ",
            "name": "I am when step of some other feature",
            "line": 33,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 64000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 80000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 34,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 39000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 19000
                },
                "status": "passed",
                "duration": 19000
              }
            ],
            "status": "passed",
            "duration": 58000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 35,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 54000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 70000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 27000
            },
            "status": "passed",
            "duration": 27000
          }
        ],
        "status": "passed",
        "duration": 498000
      }
    ],
    "status": "working",
    "duration": 5346108000
  },
  {
    "uri": "features/feature.feature",
    "id": "this-is-a-feature-with-table-in-step",
    "keyword": "Feature",
    "name": "This is a feature with table in step",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "this-is-a-feature-with-table-in-step;i-have-table-in-one-of-my-step",
        "keyword": "Scenario",
        "name": "I have table in one of my step",
        "description": "",
        "line": 7,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 6
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature (Background)",
            "line": 4,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 64000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 80000
          },
          {
            "keyword": "When ",
            "name": "I am step with options:",
            "line": 8,
            "rows": [
              {
                "cells": [
                  "option1",
                  "value1"
                ]
              },
              {
                "cells": [
                  "option2",
                  "value2"
                ]
              }
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:29"
            },
            "result": {
              "status": "passed",
              "duration": 144000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 17000
                },
                "status": "passed",
                "duration": 17000
              }
            ],
            "status": "passed",
            "duration": 161000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 42000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 15000
                },
                "status": "passed",
                "duration": 15000
              }
            ],
            "status": "passed",
            "duration": 57000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 23000
            },
            "status": "passed",
            "duration": 23000
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "status": "passed",
            "duration": 33000
          }
        ],
        "status": "passed",
        "duration": 354000
      },
      {
        "id": "this-is-a-feature-with-table-in-step;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 14,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 13
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature (Background)",
            "line": 4,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 35000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 20000
                },
                "status": "passed",
                "duration": 20000
              }
            ],
            "status": "passed",
            "duration": 55000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 15,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 66000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 82000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 16,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "passed",
              "duration": 35000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 18000
                },
                "status": "passed",
                "duration": 18000
              }
            ],
            "status": "passed",
            "duration": 53000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 70000
            },
            "status": "passed",
            "duration": 70000
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 27000
            },
            "status": "passed",
            "duration": 27000
          }
        ],
        "status": "passed",
        "duration": 287000
      },
      {
        "id": "this-is-a-feature-with-table-in-step;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 19,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 18
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature (Background)",
            "line": 4,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 38000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 54000
          },
          {
            "keyword": "And ",
            "name": "I am give step of some other feature",
            "line": 20,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:11"
            },
            "result": {
              "status": "passed",
              "duration": 33000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 16000
                },
                "status": "passed",
                "duration": 16000
              }
            ],
            "status": "passed",
            "duration": 49000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 21,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:14"
            },
            "result": {
              "status": "passed",
              "duration": 56000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 35000
                },
                "status": "passed",
                "duration": 35000
              }
            ],
            "status": "passed",
            "duration": 91000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 22,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:18"
            },
            "result": {
              "status": "passed",
              "duration": 65000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 18000
                },
                "status": "passed",
                "duration": 18000
              }
            ],
            "status": "passed",
            "duration": 83000
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 23000
            },
            "status": "passed",
            "duration": 23000
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 25000
            },
            "status": "passed",
            "duration": 25000
          }
        ],
        "status": "passed",
        "duration": 325000
      },
      {
        "id": "this-is-a-feature-with-table-in-step;i-am-some-testing-scenario-of-other-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of other functionality",
        "description": "",
        "line": 25,
        "type": "scenario",
        "tags": [
          {
            "name": "@feature",
            "line": 24
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature (Background)",
            "line": 4,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 39000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 13000
                },
                "status": "passed",
                "duration": 13000
              }
            ],
            "status": "passed",
            "duration": 52000
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 26,
            "output": [
              "$ ABC % XYZ Â£"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:4"
            },
            "result": {
              "status": "passed",
              "duration": 52000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "passed",
                  "duration": 18000
                },
                "status": "passed",
                "duration": 18000
              }
            ],
            "status": "passed",
            "duration": 70000
          },
          {
            "keyword": "And ",
            "name": "I am when step which will fail",
            "line": 27,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:25"
            },
            "result": {
              "status": "failed",
              "error_message": "I am some error (RuntimeError)\n./features/step_definitions/sample_steps.rb:26:in `/^I am when step which will fail$/'\nfeatures/feature.feature:27:in `And I am when step which will fail'",
              "duration": 265000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "failed",
            "duration": 265000
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 28,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:8"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:4"
                },
                "result": {
                  "status": "skipped",
                  "duration": 0
                },
                "status": "skipped",
                "duration": 0
              }
            ],
            "status": "skipped",
            "duration": 0
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:7"
            },
            "result": {
              "status": "passed",
              "duration": 46000
            },
            "status": "passed",
            "duration": 46000
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 29000
            },
            "status": "passed",
            "duration": 29000
          }
        ],
        "status": "failed",
        "duration": 462000
      }
    ],
    "status": "broken",
    "duration": 1428000
  }
]